{"mappings":"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","sources":["<anon>","frontend/src/main.js"],"sourcesContent":["const url = \"http://localhost:3000/highscore\";\nasync function getHighscore() {\n    const response = await fetch(url);\n    const highscore = await response.json();\n    console.log(highscore);\n    const highscoreElement = document.createElement(\"h3\");\n    highscoreElement.innerText = \"Highscore\";\n    highscoreDisplay.appendChild(highscoreElement);\n    for(let i = 0; i < 5; i++){\n        const p = document.createElement(\"p\");\n        p.innerText = highscore[i].name + \": \" + highscore[i].score;\n        highscoreDisplay.appendChild(p);\n    }\n}\nasync function postHighscore() {\n    //Datan vi vill posta\n    const bodyContent = {\n        name: playerName,\n        score: playerScore\n    };\n    //Header-objektet\n    const header = {\n        //Egenskapsnamnet Content-type behöver citattecken eftersom det innehåller ett bindestreck.\n        \"Content-type\": \"application/json; charset=UTF-8\"\n    };\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(bodyContent),\n        headers: header //Header-objektet\n    };\n    const response = await fetch(url, options);\n    const msg = await response.json();\n    console.log(msg);\n    let message;\n    if (msg.status) message = \"Grattis! Du fick highscore!\";\n    else message = \"Inget highscore! B\\xe4ttre lycka n\\xe4sta g\\xe5ng.\";\n    endResultDisplay.innerText = message;\n    getHighscore();\n}\n// spelet börjar här\nlet playerName = \"\";\nlet playerScore = 0;\nlet computerScore = 0;\nlet gameStarted = false;\nconst playerNameInput = document.querySelector(\"#input\");\nconst submitBtn = document.querySelector(\"#submitBtn\");\nconst resetBtn = document.querySelector(\"#resetBtn\");\nconst choices = document.querySelectorAll(\".choice-btn\");\nconst playerScoreDisplay = document.getElementById(\"playerScore\");\nconst computerChoiceDisplay = document.getElementById(\"computerChoice\");\nconst playerChoiceDisplay = document.getElementById(\"playerChoice\");\nconst resultDisplay = document.getElementById(\"result\");\nconst endResultDisplay = document.getElementById(\"endResult\");\nconst playerNameDisplay = document.getElementById(\"playerName\");\nconst highscoreDisplay = document.querySelector(\".highscore-div\");\nsubmitBtn.addEventListener(\"click\", function(event) {\n    event.preventDefault();\n    if (playerNameInput.value === \"\") {\n        playerNameDisplay.innerText = \"Anonym\";\n        playerName = \"Anonym\";\n    } else {\n        playerNameDisplay.innerText = playerNameInput.value;\n        playerName = playerNameInput.value;\n    }\n    resetGame();\n});\nchoices.forEach(function(choice) {\n    choice.addEventListener(\"click\", function() {\n        if (!gameStarted) return;\n        const playerChoice = this.id;\n        const computerChoice = getRandomChoice();\n        const result = playRound(playerChoice, computerChoice);\n        updateScore(result);\n        updateDisplays(playerChoice, computerChoice, result);\n        if (computerScore === 1) endGame();\n    });\n});\nresetBtn.addEventListener(\"click\", resetGame);\nfunction playRound(playerChoice, computerChoice) {\n    if (playerChoice === computerChoice) return \"Lika\";\n    else if (playerChoice === \"Sten\" && computerChoice === \"Sax\" || playerChoice === \"P\\xe5se\" && computerChoice === \"Sten\" || playerChoice === \"Sax\" && computerChoice === \"P\\xe5se\") return \"Spelare\";\n    else return \"Datorn\";\n}\nfunction getRandomChoice() {\n    const options = [\n        \"Sten\",\n        \"P\\xe5se\",\n        \"Sax\"\n    ];\n    const randomIndex = Math.floor(Math.random() * options.length);\n    return options[randomIndex];\n}\nfunction updateScore(result) {\n    if (result === \"Spelare\") playerScore++;\n    else if (result === \"Datorn\") computerScore++;\n}\nfunction updateDisplays(playerChoice, computerChoice, result) {\n    playerScoreDisplay.textContent = \"Spelarens po\\xe4ng: \" + playerScore;\n    playerChoiceDisplay.textContent = \"Spelarens val: \" + playerChoice;\n    computerChoiceDisplay.textContent = \"Datorns val: \" + computerChoice;\n    resultDisplay.textContent = getMessage(result);\n}\nfunction getMessage(result) {\n    if (result === \"Spelare\") return \"Du vann!\";\n    else if (result === \"Datorn\") return \"Game over!\";\n    else return \"Det blev Lika\";\n}\nfunction endGame() {\n    gameStarted = false;\n    postHighscore();\n}\nfunction resetGame() {\n    playerScore = 0;\n    computerScore = 0;\n    gameStarted = true;\n    playerScoreDisplay.textContent = \"\";\n    computerChoiceDisplay.textContent = \"\";\n    playerChoiceDisplay.textContent = \"\";\n    resultDisplay.textContent = \"\";\n    endResultDisplay.textContent = \"\";\n    highscoreDisplay.textContent = \"\";\n}\n\n//# sourceMappingURL=index.6a9edf8a.js.map\n","const url = 'http://localhost:3000/highscore';\r\n\r\nasync function getHighscore(){\r\n      const response = await fetch(url);\r\n      const highscore = await response.json();\r\n      console.log(highscore);\r\n      const highscoreElement = document.createElement(\"h3\");\r\n      highscoreElement.innerText = \"Highscore\";\r\n      highscoreDisplay.appendChild(highscoreElement);\r\n      for (let i = 0; i < 5; i++){\r\n        const p = document.createElement(\"p\");\r\n        p.innerText = highscore[i].name + \": \" + highscore[i].score;\r\n        highscoreDisplay.appendChild(p);\r\n      }\r\n}\r\n  \r\nasync function postHighscore(){\r\n  //Datan vi vill posta\r\n  const bodyContent = {\r\n    name: playerName,\r\n    score: playerScore,\r\n  };\r\n  \r\n  //Header-objektet\r\n  const header = {\r\n  //Egenskapsnamnet Content-type behöver citattecken eftersom det innehåller ett bindestreck.\r\n      \"Content-type\": \"application/json; charset=UTF-8\"\r\n  }\r\n  \r\n  const options = {\r\n    method: \"POST\", //Metoden som ska användas\r\n    body: JSON.stringify(bodyContent), //Gör om datan till json\r\n    headers: header //Header-objektet\r\n  };\r\n\r\n    const response = await fetch(url,options);\r\n    const msg = await response.json();\r\n    console.log(msg);\r\n    \r\n    let message;\r\n    if (msg.status) {\r\n      message = \"Grattis! Du fick highscore!\";\r\n    } else {\r\n      message = \"Inget highscore! Bättre lycka nästa gång.\";\r\n    }\r\n    endResultDisplay.innerText = message;\r\n\r\n    getHighscore();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// spelet börjar här\r\n\r\nlet playerName = \"\";\r\nlet playerScore = 0;\r\nlet computerScore = 0;\r\nlet gameStarted = false;\r\n\r\nconst playerNameInput = document.querySelector(\"#input\");\r\nconst submitBtn = document.querySelector(\"#submitBtn\");\r\nconst resetBtn = document.querySelector(\"#resetBtn\");\r\nconst choices = document.querySelectorAll(\".choice-btn\");\r\n\r\nconst playerScoreDisplay = document.getElementById(\"playerScore\");\r\nconst computerChoiceDisplay = document.getElementById(\"computerChoice\");\r\nconst playerChoiceDisplay = document.getElementById(\"playerChoice\");\r\nconst resultDisplay = document.getElementById(\"result\");\r\nconst endResultDisplay = document.getElementById(\"endResult\");\r\nconst playerNameDisplay = document.getElementById(\"playerName\");\r\nconst highscoreDisplay = document.querySelector(\".highscore-div\");\r\n\r\nsubmitBtn.addEventListener(\"click\", function (event) {\r\n  event.preventDefault();\r\n  if (playerNameInput.value === \"\") {\r\n    playerNameDisplay.innerText = \"Anonym\";\r\n    playerName = \"Anonym\";\r\n  } else {\r\n    playerNameDisplay.innerText = playerNameInput.value;\r\n    playerName = playerNameInput.value;\r\n  }\r\n  resetGame();\r\n});\r\n\r\nchoices.forEach(function (choice) {\r\n  choice.addEventListener(\"click\", function () {\r\n    if (!gameStarted) return;\r\n\r\n    const playerChoice = this.id;\r\n    const computerChoice = getRandomChoice();\r\n    const result = playRound(playerChoice, computerChoice);\r\n    updateScore(result);\r\n    updateDisplays(playerChoice, computerChoice, result);\r\n\r\n    if (computerScore === 1) {\r\n      endGame();\r\n    }\r\n  });\r\n});\r\n\r\nresetBtn.addEventListener(\"click\", resetGame);\r\n\r\nfunction playRound(playerChoice, computerChoice) {\r\n  if (playerChoice === computerChoice) {\r\n    return \"Lika\";\r\n  } else if (\r\n    (playerChoice === \"Sten\" && computerChoice === \"Sax\") ||\r\n    (playerChoice === \"Påse\" && computerChoice === \"Sten\") ||\r\n    (playerChoice === \"Sax\" && computerChoice === \"Påse\")\r\n  ) {\r\n    return \"Spelare\";\r\n  } else {\r\n    return \"Datorn\";\r\n  }\r\n}\r\n\r\nfunction getRandomChoice() {\r\n  const options = [\"Sten\", \"Påse\", \"Sax\"];\r\n  const randomIndex = Math.floor(Math.random() * options.length);\r\n  return options[randomIndex];\r\n}\r\n\r\nfunction updateScore(result) {\r\n  if (result === \"Spelare\") {\r\n    playerScore++;\r\n  } else if (result === \"Datorn\") {\r\n    computerScore++;\r\n  }\r\n}\r\n\r\nfunction updateDisplays(playerChoice, computerChoice, result) {\r\n  playerScoreDisplay.textContent = \"Spelarens poäng: \" + playerScore;\r\n  playerChoiceDisplay.textContent = \"Spelarens val: \" + playerChoice;\r\n  computerChoiceDisplay.textContent = \"Datorns val: \" + computerChoice;\r\n  resultDisplay.textContent = getMessage(result);\r\n}\r\n\r\nfunction getMessage(result) {\r\n  if (result === \"Spelare\") {\r\n    return \"Du vann!\";\r\n  } else if (result === \"Datorn\") {\r\n    return \"Game over!\";\r\n  } else {\r\n    return \"Det blev Lika\";\r\n  }\r\n}\r\n\r\nfunction endGame() {\r\n  gameStarted = false;\r\n  postHighscore();\r\n}\r\n\r\nfunction resetGame() {\r\n  playerScore = 0;\r\n  computerScore = 0;\r\n  gameStarted = true;\r\n  playerScoreDisplay.textContent = \"\";\r\n  computerChoiceDisplay.textContent = \"\";\r\n  playerChoiceDisplay.textContent = \"\";\r\n  resultDisplay.textContent = \"\";\r\n  endResultDisplay.textContent = \"\";\r\n  highscoreDisplay.textContent = \"\";\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  "],"names":["url","getHighscore","response","fetch","highscore","json","console","log","highscoreElement","document","createElement","innerText","highscoreDisplay","appendChild","i","p","name","score","postHighscore","message","bodyContent","playerName","playerScore","options","method","body","JSON","stringify","headers","msg","status","endResultDisplay","computerScore","gameStarted","playerNameInput","querySelector","submitBtn","resetBtn","choices","querySelectorAll","playerScoreDisplay","getElementById","computerChoiceDisplay","playerChoiceDisplay","resultDisplay","playerNameDisplay","resetGame","textContent","addEventListener","event","preventDefault","value","forEach","choice","playerChoice","id","computerChoice","getRandomChoice","randomIndex","Math","floor","random","length","result"],"version":3,"file":"index.6a9edf8a.js.map"}